@startuml
hide empty members

class Product{
 + __init__(name: str, price: float||int)
 + __eq__(product: Product): bool
 + __hash__(): unique_int
 + __str__(): str
 + get_name(): str
 + get_price(): int||float
 + get(): Tuple(str, int||flloat)
}

abstract class Server{
 + __init__(list_of_prods: list(Product))
 + __str__(): str
 + add(new_prod: Product)
}

class ListServer{
 + __init__(list_of_prods: list(Product))
 + __str__(): str
 + add(new_prod: Product)
}

class MapServer{
 + __init__(list_of_prods: list(Product))
 + __str__(): str
 + add(new_prod: Product)
}

class Client{
 + get_total_price(n_letters: int): int || float
}

class ServerError{
}

class TooManyProductsFoundError{
}

Server <|-- ListServer

Server <|-- MapServer

ListServer "1" *-- "*" Product

MapServer "1" *-- "*" Product

Client o-- Server

ServerError <|-- TooManyProductsFoundError

Client --> TooManyProductsFoundError : <<throws>>
@enduml